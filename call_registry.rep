/*
    hem escollit la 
*/

struct node {
    phone _ph;          // Informació del node
    node* _esq;         // Punter al fill esquerre
    node* _dret;        // Punter al fill dret
    nat _altura;        // Factor d'equilibri de l'AVL
};
node* _arrel;           // Punter a l'arrel de l'arbre
nat _mida;              // Número de telefons que hi ha en l'arbre AVL

// Metodes privats
static nat altura(node *n);
static int factor_equilibri(node *n);
static node* busca(node *n, nat num);        // Busca el telefon num dintre del AVL amb arrel n
static void rec_inordre(node *n, vector<phone>& V);

// Mètodes privats per la constructora i destructora
static node* copia_arbre(node *n);
static void esborra_arbre(node *n);

// Metodes privats per inserir un numero a l'AVL
node* insereix_numero(node *n, nat num, const string& name, nat compt);
static node* rotacio_esquerra(node *n);
static node* rotacio_dreta(node *n);

// Metodes privats per eliminar un numero a l'AVL
node* elimina_numero(node *n, nat num);
static node* ajunta(node* n1, node* n2);
static node* elimina_maxim(node *n);